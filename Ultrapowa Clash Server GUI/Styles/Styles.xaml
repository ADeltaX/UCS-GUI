<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UCS" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <ControlTemplate x:Key="FlatTextBoxStyle" TargetType="{x:Type TextBoxBase}">
        <Border Background="{TemplateBinding Background}" 
			x:Name="Bd" BorderBrush="#00779f"
			BorderThickness="{TemplateBinding BorderThickness}" Margin="0,0,0,-4">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="50"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="FlatRichTextBoxStyle" TargetType="{x:Type RichTextBox}">
        <Border Background="{TemplateBinding Background}" 
			x:Name="Bd" BorderBrush="#00779f"
			BorderThickness="{TemplateBinding BorderThickness}" Margin="0,0,0,2">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Margin="4" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#00779f"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,0,1,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowShine">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideShine">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1250000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5" x:Name="border" BorderBrush="#00779f">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Border Background="{TemplateBinding Background}" x:Name="border1">
                            <Grid>
                                <Border Opacity="0" x:Name="Shine" Width="Auto" Height="Auto" Margin="1,1,1,1" Background="#FF2D2D2D"/>
                                <ContentPresenter VerticalAlignment="Center"  Grid.RowSpan="2" HorizontalAlignment="Center" x:Name="contentPresenter"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border1" Value="0.5"/>
                            <Setter Property="Opacity" TargetName="border" Value="1"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="border">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideShine}" x:Name="HideShine_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ShowShine_BeginStoryboard" Storyboard="{StaticResource ShowShine}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabControlStyle"  TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border
							x:Name="Border"
							Background="LightBlue"
							BorderBrush="Black"
							BorderThickness="1,1,1,1"
							CornerRadius="6,6,0,0" >

                            <ContentPresenter x:Name="ContentSite"
								VerticalAlignment="Center"
								HorizontalAlignment="Center"
								ContentSource="Header"
								Margin="12,2,12,2"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="AliceBlue" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#F5F5F5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="16" />
            </Grid.ColumnDefinitions>
            <Border
				BorderBrush="#00779f"
				BorderThickness="1,1,1,1"
				x:Name="Border"
				Background="Transparent"
				Grid.ColumnSpan="2" />
            <Path
				Margin="0,1,2,0"
				Data="M0,0L4,4 8,0z"
				HorizontalAlignment="Center"
				Fill="#00779f"
				x:Name="Arrow"
				VerticalAlignment="Center"
				Width="8"
				Grid.Column="1" />
        </Grid>


        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="Border" Value="#FF2D2D2D"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="#08D9FF"/>
                <Setter Property="Fill" TargetName="Arrow" Value="#08D9FF"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <!--<Setter Property="Panel.Background" TargetName="Border" Value="#FF00697C"/>-->
                <Setter Property="Fill" TargetName="Arrow" Value="#08D9FF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <!--<Setter Property="Panel.Background" TargetName="Border" Value="#FF00697C"/>-->
                <Setter Property="BorderBrush" TargetName="Border" Value="#08D9FF"/>
                <Setter Property="TextElement.Foreground" Value="#A500697C"/>
                <Setter Property="Fill" TargetName="Arrow" Value="#08D9FF"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type TextBox}" x:Key="ComboBoxTextBoxTemplate">
        <Border
			x:Name="PART_ContentHost"
			Background="#00779f"
			Focusable="False" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="TextElement.Foreground"  Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
						x:Name="Border"
						SnapsToDevicePixels="True"
						Padding="3,3,3,3">
                        <ContentPresenter
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Panel.Background" TargetName="Border" Value="#00779f"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="FlatComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
							ClickMode="Press"
							x:Name="ToggleButton"
							IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							Focusable="False"
							Grid.Column="2"
							Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                        <ContentPresenter
							Margin="3,3,23,1"
							HorizontalAlignment="Left"
							x:Name="ContentSite"
							VerticalAlignment="Center"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							Content="{TemplateBinding SelectionBoxItem}"
							IsHitTestVisible="False" />
                        <TextBox
							Margin="1,1,23,1"
							Visibility="Hidden"
							HorizontalAlignment="Left"
							x:Name="PART_EditableTextBox"
							Background="Transparent"
							VerticalAlignment="Center"
							Style="{x:Null}"
							IsReadOnly="False"
							Focusable="True"
							xml:space="preserve"
							Template="{StaticResource ComboBoxTextBoxTemplate}"/>
						<Popup
							Placement="Bottom"
							x:Name="Popup"
							Focusable="False"
							AllowsTransparency="True"
							IsOpen="{TemplateBinding IsDropDownOpen}"
							PopupAnimation="Slide">
							<Grid
								MinWidth="{TemplateBinding ActualWidth}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								x:Name="DropDown"
								SnapsToDevicePixels="True">
								<Border
									BorderBrush="#00779f"
									BorderThickness="1,1,1,1"
									x:Name="DropDownBorder"
									Background="#FF181818"/>
								<ScrollViewer
									Margin="2,6,2,6"
									SnapsToDevicePixels="True">
									<ItemsPresenter
										KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="Window.AllowsTransparency" SourceName="Popup" Value="True">
                            <Setter Property="Margin" TargetName="DropDownBorder" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
								Width="18.5"
								Height="18.5"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="1"
								ClipToBounds="True">
                                <Path x:Name="CheckMark"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Data="M -1 4 L 3 7 M 3 7 L 12 0"
									Stretch="Fill"
									Stroke="#00779f"
									StrokeEndLineCap="Round"
									StrokeStartLineCap="Round"
									StrokeThickness="2" RenderTransformOrigin="0.493,1.018" Width="Auto" Margin="1.584,3.25,1.666,3.25" Height="Auto" d:LayoutOverrides="HorizontalAlignment, VerticalAlignment" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}" >
                    <Grid x:Name="Root">
                        <Border 
							x:Name="PART_Track" 
							Background="#A500697C"
							BorderBrush="#A500697C"
							BorderThickness="1" />
                        <Border 
							x:Name="PART_Indicator" 
							Background="#00779f" 
							BorderBrush="#00779f" 
							BorderThickness="1" 
							HorizontalAlignment="Left" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Root" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270" />
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="Root" Property="Width"
								Value="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
              />
                            <Setter TargetName="Root" Property="Height"
								Value="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
              />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>